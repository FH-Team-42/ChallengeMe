package Profile;

import java.util.concurrent.ThreadLocalRandom;

/**
 * Created by Felix on 02.01.2017.
 */

public class UserData {
    public String username;

    public class birthdate {
        int day, month, year;
    }

    public String profilePic;
    public int challengesCompleted;
    public int challengeAssigned;

    protected int reputation;
    protected int userID;

    private int getNewChallenge(UserData user) {
        int newID;
        int minChallengeIndex = 0;          //should be generated by the database
        int maxChallengeIndex = 5;          //should be generated by the database
        if (user.challengeAssigned == 0) {
            //generate new challenge
            int min = minChallengeIndex;
            int max = maxChallengeIndex;
            // nextInt is normally exclusive of the top value,
            // so add 1 to make it inclusive
            newID = ThreadLocalRandom.current().nextInt(min, max + 1);
            challengeRemoveFromDatabase(newID);                 //will be added to control unit
            return newID;
        } else {
            //user already has a challenge assigned, return a nope
            return -1;
        }
    }

    private int giveUp(UserData user) {
        if (user.challengeAssigned != 0) {
            challengeAddToDatabase(user.challengeAssigned);     //will be added to control unit
            user.challengeAssigned = 0;
            return 1;
        } else {
            user.reputation -= 2;
            return 0;
        }
    }
}